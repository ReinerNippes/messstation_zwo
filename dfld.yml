#!/usr/bin/env ansible-playbook

- name: Setup DFLD Messstation ZWO on Raspberry Pi
  hosts: messstation
  gather_facts: true
  become: true

  roles:
    - role: configure-raspi
    - role: geerlingguy.docker
      vars:
        docker_users:
          - "{{ dfld_user }}"
      when: ansible_facts.architecture == 'x86_64'
    - role: geerlingguy.docker_arm
      vars:
        docker_users:
          - "{{ dfld_user }}"
      when: ansible_facts.architecture == 'aarch64'
    - role: configure-raspi
    - role: build-images
    - role: portainer
    - role: detect_hardware
    - role: deploy_infrastructure_stack
    - role: configure-grafana
    - role: deploy_ingress_stack
      when: ansible_facts.architecture == 'aarch64'


  post_tasks:
    - name: Print error message in case of hardware detection failure
      when: detect_hw_response.failed
      ansible.builtin.debug:
        msg: 
          - ''
          - '------------------------------------------------------------------------------------------------------'
          - 'Hardware detection failed.'
          - 'Please check requirements and your hardware.'
          - '------------------------------------------------------------------------------------------------------'
          - ''

    - name: Ready message
      ansible.builtin.debug:
        msg:
          - ''
          - '------------------------------------------------------------------------------------------------------'
          - ''
          - 'DFLD Messstation ZWO is {{ (detect_hw_response.failed) | ternary("not", "") }} ready.'
          - ''
          - 'You can access the portainer services at: https://{{ ansible_host }}:9443 / User: {{ portainer_user }} Password:{{ portainer_password }}'
          - 'You can access the grafana services at: https://{{ ansible_host }}:3000 / User: {{ grafana_user }} Password:{{ grafana_password }}'
          - 'You can access the influxdb services at: https://{{ ansible_host }}:8086 / User: {{ influxdb_user }} Password:{{ influxdb_password }}'
          - ''
          - '{{ (detect_hw_response.failed) | ternary("You may look around. But nothing will be measured.", "Happy measuring!") }}'
          - ''
          - '------------------------------------------------------------------------------------------------------'
          - ''

    - name: Print hardware setup
      ansible.builtin.debug:
        msg:
          - ''
          - '------------------------------------------------------------------------------------------------------'
          - 'Hardware setup:'
          - ''
          - 'ADS-B Reciever detect: {{ (hw_conf.ADSB_AVAILABLE == 1) | ternary("true", "false") }}'
          - 'DFLD DNMS detect:      {{ (hw_conf.DFLD_DNMS_AVAILABLE == 1) | ternary("true", "false") }}'
          - 'DFLD_LEGACY detect:    {{ (hw_conf.DFLD_LEGACY_AVAILABLE == 1) | ternary("true", "false") }}'
          - 'DNMS_I2C detect:       {{ (hw_conf.DNMS_I2C_AVAILABLE == 1) | ternary("true", "false") }}'
          - 'BME280 device detect:  {{ (hw_conf.BME280_AVAILABLE == 1) | ternary("true", "false") }}'
          - '------------------------------------------------------------------------------------------------------'
          - ''

    - name: Check if reboot is required
      when: check_reboot.stat.exists
      block:
        - name: Wait to ready
          ansible.builtin.pause:
            minutes: 1
            prompt: "Waiting for the system to reboot. You may copy the above messages for later use."

        - name: Reboot System
          ansible.builtin.reboot:
            msg: |
              Reboot is required.
              Your System will reboot now.
            reboot_timeout: 120
